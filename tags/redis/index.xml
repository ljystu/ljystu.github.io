<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Redis - Tag - My New Hugo Site</title>
        <link>https://ljystu.github.io/tags/redis/</link>
        <description>Redis - Tag - My New Hugo Site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ljystu@gmail.com (Jingyu Li)</managingEditor>
            <webMaster>ljystu@gmail.com (Jingyu Li)</webMaster><lastBuildDate>Wed, 18 May 2022 10:36:32 &#43;0100</lastBuildDate><atom:link href="https://ljystu.github.io/tags/redis/" rel="self" type="application/rss+xml" /><item>
    <title>Redis distributed lock</title>
    <link>https://ljystu.github.io/redis-distributed-lock/</link>
    <pubDate>Wed, 18 May 2022 10:36:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>https://ljystu.github.io/redis-distributed-lock/</guid>
    <description><![CDATA[Distributed lock Under highly concurrent environment, the distributed lock is used to ensure consistency in the database. Here&rsquo;s an example of this.
Using simple lock:
1 2 3 4 5 6 7 8 9  stringRedisTemplate.opsForValue().setIfAbsent(&#34;lockKey&#34;, &#34;ljy&#34;); // This is the simplest realization of lock in redis // But this lock will trigger deadlock when the service is down // adding delete won&#39;t help stringTemplate.delete(&#34;lockKey&#34;); // setting expiration time have problem as well stringRedisTemplate.]]></description>
</item><item>
    <title>Redis</title>
    <link>https://ljystu.github.io/redis/</link>
    <pubDate>Mon, 16 May 2022 10:36:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>https://ljystu.github.io/redis/</guid>
    <description><![CDATA[Redis Redis with python Simple example of how to use redis as Cache in python:
If we want to store some info in cache(logo, name), we first can convert them into JSON format and assign a key, and store the info in cache.
1 2 3  logo = get_logo() #maybe get logo from api json.dumps(logo) #convert to JSON logo_key = f&#34;{symbol}_logo&#34; #naming convention   When we need to use the info, we can first get it from the cache.]]></description>
</item></channel>
</rss>
