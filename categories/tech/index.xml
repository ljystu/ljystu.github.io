<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Tech - Category - My New Hugo Site</title>
        <link>http://example.org/categories/tech/</link>
        <description>Tech - Category - My New Hugo Site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ljystu@gmail.com (Jingyu Li)</managingEditor>
            <webMaster>ljystu@gmail.com (Jingyu Li)</webMaster><lastBuildDate>Thu, 27 Oct 2022 11:35:32 &#43;0100</lastBuildDate><atom:link href="http://example.org/categories/tech/" rel="self" type="application/rss+xml" /><item>
    <title>Mysql</title>
    <link>http://example.org/db/</link>
    <pubDate>Thu, 27 Oct 2022 11:35:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/db/</guid>
    <description><![CDATA[DB操作 主要来自菜鸟教程 A inner join B 取交集。 A left join B 取 A 全部，B 没有对应的值为 null。 A right join B 取 B 全部 A 没有对应的值为 null。 A full outer join B 取并]]></description>
</item><item>
    <title>Postgresql</title>
    <link>http://example.org/postgresql/</link>
    <pubDate>Mon, 10 Oct 2022 14:35:00 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/postgresql/</guid>
    <description><![CDATA[大部分参考菜鸟教程 有意思的数据类型： tsvector，tsquery：方便的全文搜索特性 使用to构建全文 1 2 3 SELECT title FROM pgweb WHERE to_tsvector(&#39;english&#39;, body) @@ to_tsquery(&#39;english&#39;, &#39;friend&#39;); 创建复合类]]></description>
</item><item>
    <title>Spring</title>
    <link>http://example.org/spring/</link>
    <pubDate>Sun, 25 Sep 2022 11:44:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/spring/</guid>
    <description><![CDATA[AOP AOP（Aspect orietend programming）面向切面编程 AOP是对OOP的一种完善，OOP引入了封装多台和继承来建立对象层次结构，但是对]]></description>
</item><item>
    <title>Computer Network</title>
    <link>http://example.org/computer-network/</link>
    <pubDate>Sun, 18 Sep 2022 19:59:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/computer-network/</guid>
    <description><![CDATA[OSI 7层 ① 应用层 应用层位于 OSI 参考模型的第七层，其作用是通过应用程序间的交互来完成特定的网络应用。该层协议定义了应用进程之间的交互规则，通过不同]]></description>
</item><item>
    <title>Redis</title>
    <link>http://example.org/redis/</link>
    <pubDate>Thu, 15 Sep 2022 22:37:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/redis/</guid>
    <description><![CDATA[缓存是什么？ 2.1.1 为什么要使用缓存 一句话:因为速度快,好用 缓存数据存储于代码中,而代码运行在内存中,内存的读写性能远高于磁盘,缓存可以大大降低用]]></description>
</item><item>
    <title>JVM</title>
    <link>http://example.org/jvm/</link>
    <pubDate>Fri, 02 Sep 2022 14:23:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/jvm/</guid>
    <description><![CDATA[JVM stands for Java Virtual Machine. Write Once Run Anywhere Automatic memory management and garbage collection mechanism Array out of bounds detection Program counter register To store the address of next command in JVM. Features: Thread safe. Every thread has its own time slices and will be executed when it is its turn. No memory overflow problem. JVM stacks Allocated per thread as well Every thread in the JVM needs]]></description>
</item><item>
    <title>Elasticssearch</title>
    <link>http://example.org/elasticsearch/</link>
    <pubDate>Wed, 10 Aug 2022 13:53:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/elasticsearch/</guid>
    <description><![CDATA[A powerful search engine for large scale data search. Also benefit for log analysis and monitoring. Elasticsearch: store, compute, search data Inverted Index(less memory and faster query) inverted index (also referred to as a postings list, postings file, or inverted file) is a database index storing a mapping from content, such as words or numbers, to its locations in a table, or in a document or a set of documents]]></description>
</item><item>
    <title>RabbbitMQ</title>
    <link>http://example.org/rabbitmq/</link>
    <pubDate>Wed, 10 Aug 2022 11:13:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/rabbitmq/</guid>
    <description><![CDATA[Decoupling Event-driven design better performance Problems with Synchronous communication(Feign): 1.Coupling 2.can not handle huge amount of requests in a short time(high concurrency). 3.Waste of resources during waiting 4.Cascade failure: service failed, the cluster fails cascadingly Asynchronous(Event driven design): Use Broker to control events. Service publish events and the others subscribed to the broker waiting for events. Better performance/No cascade failures Advantages of asynchronous communication: Low coupling Improve throughput Fault isolation]]></description>
</item><item>
    <title>Redis distributed lock</title>
    <link>http://example.org/redis-distributed-lock/</link>
    <pubDate>Wed, 18 May 2022 10:36:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/redis-distributed-lock/</guid>
    <description><![CDATA[Distributed lock Under highly concurrent environment, the distributed lock is used to ensure consistency in the database. Here&rsquo;s an example of this.
Using simple lock:
1 2 3 4 5 6 7 8 9  stringRedisTemplate.opsForValue().setIfAbsent(&#34;lockKey&#34;, &#34;ljy&#34;); // This is the simplest realization of lock in redis // But this lock will trigger deadlock when the service is down // adding delete won&#39;t help stringTemplate.delete(&#34;lockKey&#34;); // setting expiration time have problem as well stringRedisTemplate.]]></description>
</item><item>
    <title>Spring Cloud Gateway</title>
    <link>http://example.org/spring-gateway/</link>
    <pubDate>Tue, 06 Apr 2021 10:36:32 &#43;0100</pubDate><author>
        <name>Jingyu Li</name>
    </author><guid>http://example.org/spring-gateway/</guid>
    <description><![CDATA[Using spring cloud gateway can quickly build an API gateway, but before that, let’s introduce some special concepts involved in using spring cloud gateway framework, so as to deepen the understanding of spring cloud gateway and facilitate the later use.
 Routing: it is a basic component in spring cloud gateway. It is usually composed of an ID, a target URI, and a series of predicates and filters. Predicate: it is the predicate object of Java 8 function library.]]></description>
</item></channel>
</rss>
